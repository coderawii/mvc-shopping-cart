{"version":3,"sources":["node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","node_modules/@babel/runtime/regenerator/index.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","products.js","index.js"],"names":["sys","id","fields","title","price","image","file","url","PubSub","registry","evtName","cb","push","i","length","splice","data","forEach","Store","pubSub","allProducts","cartItems","init","getStoreProducts","getCartItemsFromStorage","item","find","el","localStorage","setItem","JSON","stringify","emit","products","map","console","log","parse","getItem","StoreView","wrapper","cache","insertAdjacentHTML","render","list","document","querySelector","productBtns","querySelectorAll","on","logItems","bind","updateProductsAndCartView","productBtn","btn","dataset","style","disabled","StoreController","store","getElementById"],"mappings":"AAAA,AMAA,ACAA,ACAA,APAA,ACAA,ACAA,ACAA,ACAA;ALCA,AMAA,ACAA,ACAA,APAA,ACAA,ACAA,ACAA,ACAA;ALCA,AMAA,ACAA,ACAA,APAA,ACAA,ACAA,ACAA;AJCA,AMAA,ACAA,ACAA,APAA,ACAA,ACAA,ACAA;AJCA,AMAA,ACAA,ACAA,APAA,ACAA,ACAA,ACAA;AJCA,AMAA,ACAA,ACAA,ALAA,ACAA;AJCA,AMAA,ACAA,ACAA,ALAA,ACAA;AJCA,AMAA,AEAA,ALAA,ACAA,AKPe,oBAAW;ATQ1B,AMAA,AEAA,ALAA,ACAA,AKPE,SAAO,CACL;ATOJ,AMAA,AEAA,ALAA,ACAA,AKNMA,IAAAA,GAAG,EAAE;ATOX,AMAA,AEAA,ALAA,ACAA,AKPaC,MAAAA,EAAE,EAAE;AHQjB,AEAA,AJAA,AKRW,KADP;ACDJ,AJWA,AEAA,AJAA,AKRMC,IAAAA,MAAM,EAAE;AHSd,AEAA,AJAA,AKRQC,MAAAA,KAAK,EAAE,iBADD;AHUd,AEAA,AJAA,AKRQC,MAAAA,KAAK,EAAE,KAFD;AHWd,AEAA,AJAA,AKRQC,MAAAA,KAAK,EAAE;ACPf,AJgBA,AEAA,AJAA,AKTiBH,QAAAA,MAAM,EAAE;AHUzB,AFAA,AKV2BI,ICLrBE,MDKqBF,IAAI,EAAE;AHWjC,AFAA,AKXmCC,YAAAA,GAAG,EAAE;AHYxC,AFAA,AKZiC;ACJ/B,AJiBF,AFAA,AKbyB,oBCJT;AAAA,AJkBhB,AFAA,AKde;ACHX,AJkBJ,AFAA,AKlBc,SCALE,QAAL,GAAgB,EAAhB;AACD,AJkBH,AFAA,AKrBI,GADK,EASL;AHcJ,AFAA,AKbMT,IAAAA,GAAG,EAAE;AHcX,AFAA,AKdaC,MAAAA,EAAE,EAAE;AHejB,AFAA,AKfW,KADP;AHiBJ,AFAA,AKfMC,IAAAA,MAAM,EAAE,WCLTQ,SAASC,IAAI;AACd,AJoBJ,AFAA,AKfQR,MAAAA,KCLCM,ADKI,EAAE,MCLX,CAAcC,OAAd,EDIU,ECJe,KAAKD,QAAL,CAAcC,OAAd,KAA0B,EAAnD;AACA,AJoBJ,AFAA,AKfQN,MAAAA,KCLCK,ADKI,EAAE,KAFD,CCHV,CAAcC,OAAd,EAAuBE,IAAvB,CAA4BD,EAA5B;AACD,AJoBH,AFAA,AKfQN,MAAAA,KAAK,EAAE;AHgBf,AFAA,AKhBiBH,QAAAA,MAAM,EAAE;AHiBzB,AFAA,AKjB2BI,UAAAA,IAAI,EAAE;AHkBjC,AFAA,AKlBmCC,YAAAA,GAAG,EAAE,OCHlCG,SAASC,IAAI;AACf,AJqBJ,AFAA,AKnBiC,UCFzB,KAAKF,QAAL,CAAcC,OAAd,CAAJ,EAA4B;AAC1B,AJqBN,AFAA,AKpByB,aCDd,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,QAAL,CAAcC,OAAd,EAAuBI,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACtD,AJqBR,AFAA,AKrBe,cCAH,KAAKJ,QAAL,CAAcC,OAAd,EAAuBG,CAAvB,MAA8BF,EAAlC,EAAsC;AACpC,ANqBV,AKzBc,iBCICF,QAAL,CAAcC,OAAd,EAAuBK,MAAvB,CAA8BF,CAA9B,EAAiC,CAAjC;AACA,ANqBV,AK5BI,GATK,EAiBL;ACAK,ANqBT,AKpBMb,IAAAA,GAAG,EAAE;ACAJ,ANqBP,AKrBaC,MAAAA,EAAE,EAAE;ACCZ,ANqBL,AKtBW,KADP;ACGD,ANqBH,AKtBMC,IAAAA,MAAM,EAAE;ALuBd,AKtBQC,MAAAA,KAAK,EAAE,kBADD;ALwBd,AKtBQC,MAAAA,KAAK,EAAE,KAFD;ALyBd,AKtBQC,MAAAA,KAAK,EAAE,YCARK,SAASM,MAAM;AAClB,ANsBJ,AKvBiBd,QAAAA,ECCT,IDDe,CCCVO,CDDY,OCCjB,CAAcC,OAAd,CAAJ,EAA4B;AAC1B,ANsBN,AKxB2BJ,UAAAA,GCEhBG,CDFoB,EAAE,KCE3B,CAAcC,OAAd,EAAuBO,OAAvB,CAA+B,UAAAN,EAAE;AAAA,ANuBvC,AKzBmCJ,YAAAA,GAAG,ECEKI,ADFH,ECEK,CAACK,IAAD,CAAN;AAAA,ANwBvC,AK1BiC,SCE3B;AACD,ANwBL,AK3ByB;ACItB,ANwBH,AK5Be;AL6Bf,AKhCc;ALiCd,AKnCI,GAjBK,EAyBL;AL4BJ,AK3BMhB,IAAAA,GAAG,EAAE;AL4BX,AK5BaC,MAAAA,EAAE,EAAE;AL6BjB,AK7BW,ICGLiB,CDJF;AL+BJ,AK7BMhB,IAAAA,MAAM,EAAE;AL8Bd,AK7BQC,MAAAA,KAAK,EAAE,gBADD;ACGZ,AN4BF,AK7BQC,MAAAA,KAAK,EAAE,ICCDe,CDHA,KCGZ,EAAoB;AAAA,AN6BtB,AK7BQd,MAAAA,KAAK,EAAE;ACCX,AN6BJ,AK9BiBH,QAAAA,CCCRiB,KDDc,CCCnB,CDDqB,ECCPA,MAAd;AACA,AN6BJ,AK/B2Bb,SCElBc,CDFkBd,IAAI,EAAE,ICE7B,GAAmB,EAAnB;AACA,AN6BJ,AKhCmCC,SCG1Bc,GDH0Bd,GAAG,EAAE,CCGpC,GAAiB,EAAjB;AACA,AN6BJ,AKjCiC,SCIxBe,IAAL;AACD,AN6BH,AKlCyB;ALmCzB,AKnCe;ALoCf,AKvCc;ALwCd,AK1CI,GAzBK,EAiCL;ALmCJ,AKlCMtB,IAAAA,GAAG,EAAE;ALmCX,AKnCaC,MAAAA,EAAE,EAAE;ALoCjB,AKpCW,KADP;ALsCJ,AKpCMC,IAAAA,MAAM,EAAE;ALqCd,AKpCQC,MAAAA,KAAK,EAAE,QADD;ALsCd,AKpCQC,MAAAA,KAAK,EAAE,KAFD;ALuCd,AKpCQC,MAAAA,KAAK,EAAE;ALqCf,AKrCiBH,QAAAA,MAAM,EAAE;ALsCzB,AKtC2BI,UAAAA,IAAI,EAAE;ALuCjC,AKvCmCC,YAAAA,GAAG,EAAE,MCA9B,KAAKgB,gBAAL;ANwCV,AKxCiC;ALyCjC,AKzCyB;AL0CzB,AK1Ce;AL2Cf,AK9Cc,uBCIJ,KAAKC,uBAAL;AN2CV,AKjDI,GAjCK,EAyCL;AL0CJ,AKzCMxB,IAAAA,GAAG,EAAE;AL0CX,AK1CaC,MAAAA,EAAE,EAAE;AL2CjB,AK3CW,KADP;AL6CJ,AK3CMC,IAAAA,MAAM,EAAE;AL4Cd,AK3CQC,MAAAA,KAAK,EAAE,SADD;AL6Cd,AK3CQC,MAAAA,KAAK,EAAE,KAFD;AL8Cd,AK3CQC,MAAAA,KAAK,EAAE;AL4Cf,AK5CiBH,QAAAA,MAAM,EAAE;AL6CzB,AK7C2BI,UAAAA,IAAI,EAAE;AL8CjC,AK9CmCC,YAAAA,GAAG,EAAE;AL+CxC,AK/CiC;ALgDjC,AKhDyB;ALiDzB,AKjDe;ALkDf,AKrDc;ALsDd,AKxDI,GAzCK,EAiDL;ALiDJ,AKhDMP,IAAAA,GAAG,EAAE;ALiDX,AKjDaC,MAAAA,EAAE,EAAE,oBCRLA,IAAI;AACZ,ANyDJ,AKlDW,KADP,KCNMwB,IAAI,GAAG,KAAKL,WAAL,CAAiBM,IAAjB,CAAsB,UAAAC,EAAE;AAAA,AN0DzC,AKlDMzB,IAAAA,MAAM,EAAE,GCR+ByB,EAAE,CAAC1B,EAAH,KAAUA,EAAd;AAAA,AN2DzC,AKlDQE,MAAAA,CCTS,CAAb,GDSS,EAAE,OADD;ACPV,AN2DJ,AKlDQC,MAAAA,KCTCiB,ADSI,EAAE,KAFD,ECPV,CAAeT,IAAf,CAAoBa,IAApB;AACAG,AN2DJ,AKlDQvB,MCTJuB,ADSIvB,KAAK,EAAE,KCTC,CAACwB,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe,KAAKV,SAApB,CAAlC;AACA,AN2DJ,AKnDiBnB,QAAAA,GCRRiB,GDQc,EAAE,CCRrB,CAAYa,IAAZ,CAAiB,WAAjB,EAA8B/B,EAA9B;AACD,AN2DH,AKpD2BK,UAAAA,IAAI,EAAE;ALqDjC,AKrDmCC,YAAAA,GAAG,EAAE;ALsDxC,AKtDiC;ALuDjC,AKvDyB;ALwDzB,AKxDe;ALyDf,AK5Dc;AL6Dd,AK/DI,GAjDK,EAyDL;ALwDJ,AKvDMP,IAAAA,GAAG,EAAE;ALwDX,AKxDaC,MAAAA,EAAE,EAAE;ALyDjB,AKzDW,KADP;AL2DJ,AKzDMC,IAAAA,MAAM,EAAE;AL0Dd,AKzDQC,MAAAA,KAAK,EAAE,OADD;ACTV,ANoEJ,AKzDQC,MAAAA,KAAK,EAAE,KAFD;ACRJ6B,ANoEV,AKzDQ5B,MAAAA,KAAK,EAAE,GCXL4B,WAAW,yBAAQC,GAAR,CAAY,UAAAT,IAAI,EAAI;AAAA,ANqEzC,AK1DiBvB,QAAAA,MAAM,EAAE,qBCVMuB,IAAI,CAACvB,MADK;AAAA,ANsEzC,AK3D2BI,UAAAA,IAAI,EAAE,MCVnBH,KAD2B,gBAC3BA,KAD2B;AAAA,ANuEzC,AK5DmCI,YAAAA,GAAG,EAAE,KCVnBH,KADoB,gBACpBA,KADoB;AAAA,ANwEzC,AK7DiC,sBCTnBH,EAF2B,GAEpBwB,IAAI,CAACzB,GAFe,CAE3BC,EAF2B;AAGnC,ANsEN,AK9DyB,sBCRbI,KAAK,GAAGoB,IAAI,CAACvB,MAAL,CAAYG,KAAZ,CAAkBH,MAAlB,CAAyBI,IAAzB,CAA8BC,GAA5C;AACA,ANsEN,AK/De,yBCPF;AAAEJ,ANuEf,AKnEc,oBCJCA,KAAK,EAALA,KAAF;AAASC,ANwEtB,AKtEI,GAzDK,CAAP,gBCuDoBA,KAAK,EAALA,KAAT;AAAgBH,ANyE7B,AK9DC,oBCX4BA,EAAE,EAAFA,EAAhB;AAAoBI,AN0EjC,oBM1EiCA,KAAK,EAALA;AAApB,AN2Eb,mBM3EM;AACD,AN2EL,iBMhFqB;AAMjB,AN2EJ,qBM3ESe,WAAL,GAAmBa,QAAnB;AACAE,AN2EJ,gBM3EIA,OAAO,CAACC,GAAR,CAAY,KAAKhB,WAAjB;AACA,AN2EJ,qBM3ESD,MAAL,CAAYa,IAAZ,CAAiB,oBAAjB,EAAuC,KAAKZ,WAA5C,GACA;AACA,AN0EJ;AMzEI,AN0EJ;AMzEI,AN0EJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBMjG2BU,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,WAArB,CAAX;ANkG3B;AACA;AMnGI,ANoGJ,qBMpGSjB;AACL,ANoGJ,qBMpGSF,MAAL,CAAYa,IAAZ,CAAiB,gBAAjB,EAAmC,KAAKZ,WAAxC;ANqGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IMpHMmB;ANqHN;AACA;AMrHE,ANsHF,qBMtHcC,OAAZ,EAAqBrB,MAArB,EAA6B;AAAA,ANuH/B;AMtHI,ANuHJ,SMvHSqB,OAAL,GAAeA,OAAf;AACA,ANuHJ,SMvHSrB,MAAL,GAAcA,MAAd;AACA,ANuHJ,SMvHSsB,KAAL,GAAa,EAAb;AACA,ANuHJ,SMvHSnB,IAAL;AACD,ANuHH;AACA;AACA;AACA;AACA,2BMzHS;AACLkB,ANyHJ,MMzHIA,OAAO,CAACE,kBAAR,CAA2B,YAA3B,EAAyC,KAAKC,MAAL,EAAzC;AACA,ANyHJ,WMzHSF,KAAL,CAAWG,IAAX,GAAkBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAlB;AACA,ANyHJ,WMzHSL,KAAL,CAAWM,WAAX,oCAA6BF,QAAQ,CAACG,gBAAT,CAA0B,MAA1B,CAA7B;AACA,ANyHJ,WMzHS7B,MAAL,CAAY8B,EAAZ,CAAe,oBAAf,EAAqC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAArC;AACA,ANyHJ,WMzHShC,MAAL,CAAY8B,EAAZ,CAAe,WAAf,EAA4B,KAAKG,yBAAL,CAA+BD,IAA/B,CAAoC,IAApC,CAA5B;AACD,ANyHH,MMvHE;AACA,ANuHF;AMtHE,ANuHF;AMtHE,ANuHF;AMtHE,ANuHF;AMtHE,ANuHF;AACA;AACA;AACA;AACA,8CMzH4BlD,IAAI;AAC5B,ANyHJ,UMzHUoD,UAAU,GAAG,KAAKZ,KAAL,CAAWM,WAAX,CAAuBrB,IAAvB,CAA4B,UAAA4B,GAAG;AAAA,AN0HtD,eM1H0DA,GAAG,CAACC,OAAJ,CAAYtD,EAAZ,KAAmBA,EAAvB;AAAA,AN2HtD,OM3HuB,CAAnB;AACAoD,AN2HJ,MM3HIA,UAAU,CAACG,KAAX,CAAiBC,QAAjB,GAA4B,IAA5B;AACD,AN2HH;AACA;AACA;AACA,6BM5HW;AACP,AN4HJ;AMxHG,ANyHH;AACA;AACA;AACA,gCM1HchC,MAAM;AAChB,AN0HJ,2BM1HkBA,IAAI,CAACtB,KAAnB;AACD,AN0HH;AACA;AACA;AACA;AACA;AACA,IM5HMuD;AN6HN;AACA;AM7HE,AN8HF,2BM9HcC,KAAZ,EAAmB;AAAA,AN+HrB;AM9HI,AN+HJ,SM/HSA,KAAL,GAAaA,KAAb;AACA,AN+HJ,SM/HSrC,IAAL;AACD,AN+HH;AACA;AACA;AACA;AACA,2BMjIS,CACL;AACD,ANgIH;AACA;AACA;AACA;AACA;AMjIA,ANkIA,IMlIMkB,OAAO,GAAGK,QAAQ,CAACe,cAAT,CAAwB,MAAxB,CAAhB;AACA,ANkIA,IMlIMzC,MAAM,GAAG,IAAIX,MAAJ,EAAf,EACA;ANkIA;AMjIA,ANkIA,IMlIMmD,KAAK,GAAG,IAAIzC,KAAJ,CAAUC,MAAV,CAAd,EACA;ANkfile":"mvc-shopping-cart.e31bb0bc.js","sourceRoot":"..","sourcesContent":["function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","export default function() {\r\n  return [\r\n    {\r\n      sys: { id: '1' },\r\n      fields: {\r\n        title: 'queen panel bed',\r\n        price: 10.99,\r\n        image: { fields: { file: { url: './images/product-1.jpeg' } } }\r\n      }\r\n    },\r\n    {\r\n      sys: { id: '2' },\r\n      fields: {\r\n        title: 'king panel bed',\r\n        price: 12.99,\r\n        image: { fields: { file: { url: './images/product-2.jpeg' } } }\r\n      }\r\n    },\r\n    {\r\n      sys: { id: '3' },\r\n      fields: {\r\n        title: 'single panel bed',\r\n        price: 12.99,\r\n        image: { fields: { file: { url: './images/product-3.jpeg' } } }\r\n      }\r\n    },\r\n    {\r\n      sys: { id: '4' },\r\n      fields: {\r\n        title: 'twin panel bed',\r\n        price: 22.99,\r\n        image: { fields: { file: { url: './images/product-4.jpeg' } } }\r\n      }\r\n    },\r\n    {\r\n      sys: { id: '5' },\r\n      fields: {\r\n        title: 'fridge',\r\n        price: 88.99,\r\n        image: { fields: { file: { url: './images/product-5.jpeg' } } }\r\n      }\r\n    },\r\n    {\r\n      sys: { id: '6' },\r\n      fields: {\r\n        title: 'dresser',\r\n        price: 32.99,\r\n        image: { fields: { file: { url: './images/product-6.jpeg' } } }\r\n      }\r\n    },\r\n    {\r\n      sys: { id: '7' },\r\n      fields: {\r\n        title: 'couch',\r\n        price: 45.99,\r\n        image: { fields: { file: { url: './images/product-7.jpeg' } } }\r\n      }\r\n    },\r\n    {\r\n      sys: { id: '8' },\r\n      fields: {\r\n        title: 'table',\r\n        price: 33.99,\r\n        image: { fields: { file: { url: './images/product-8.jpeg' } } }\r\n      }\r\n    }\r\n  ]\r\n}\r\n","// import PubSub from './PubSub'\r\nimport items from './products'\r\nclass PubSub {\r\n  constructor() {\r\n    this.registry = {}\r\n  }\r\n\r\n  on(evtName, cb) {\r\n    this.registry[evtName] = this.registry[evtName] || []\r\n    this.registry[evtName].push(cb)\r\n  }\r\n\r\n  off(evtName, cb) {\r\n    if (this.registry[evtName]) {\r\n      for (let i = 0; i < this.registry[evtName].length; i++) {\r\n        if (this.registry[evtName][i] === cb) {\r\n          this.registry[evtName].splice(i, 1)\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  emit(evtName, data) {\r\n    if (this.registry[evtName]) {\r\n      this.registry[evtName].forEach(cb => cb(data))\r\n    }\r\n  }\r\n}\r\n\r\nclass Store {\r\n  constructor(pubSub) {\r\n    this.pubSub = pubSub\r\n    this.allProducts = []\r\n    this.cartItems = []\r\n    this.init()\r\n  }\r\n\r\n  async init() {\r\n    await this.getStoreProducts()\r\n    await this.getCartItemsFromStorage()\r\n  }\r\n\r\n  addToCart(id) {\r\n    const item = this.allProducts.find(el => el.id === id)\r\n    this.cartItems.push(item)\r\n    localStorage.setItem('cartItems', JSON.stringify(this.cartItems))\r\n    this.pubSub.emit('addToCart', id)\r\n  }\r\n\r\n  async getStoreProducts() {\r\n    // const { items = [] } = await fetch('products.json').then(res => res.json())\r\n    const products = items().map(item => {\r\n      const { title, price } = item.fields\r\n      const { id } = item.sys\r\n      const image = item.fields.image.fields.file.url\r\n      return { title, price, id, image }\r\n    })\r\n    this.allProducts = products\r\n    console.log(this.allProducts)\r\n    this.pubSub.emit('storeProductsReady', this.allProducts)\r\n    // const data = await fetch('https://randomuser.me/api/').then(res =>\r\n    //   res.json()\r\n    // )\r\n    // console.log(data)\r\n  }\r\n\r\n  async getCartItemsFromStorage() {\r\n    this.cartItems = await JSON.parse(localStorage.getItem('cartItems'))\r\n    this.pubSub.emit('cartItemsReady', this.allProducts)\r\n  }\r\n}\r\n\r\nclass StoreView {\r\n  constructor(wrapper, pubSub) {\r\n    this.wrapper = wrapper\r\n    this.pubSub = pubSub\r\n    this.cache = {}\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    wrapper.insertAdjacentHTML('afterbegin', this.render())\r\n    this.cache.list = document.querySelector('.list')\r\n    this.cache.productBtns = [...document.querySelectorAll('.btn')]\r\n    this.pubSub.on('storeProductsReady', this.logItems.bind(this))\r\n    this.pubSub.on('addToCart', this.updateProductsAndCartView.bind(this))\r\n  }\r\n\r\n  // logItems(items) {\r\n  //   console.log(items)\r\n  //   items.map(el => {\r\n  //     this.cache.list.insertAdjacentHTML('beforeend', this.getListItem(el))\r\n  //   })\r\n  // }\r\n\r\n  updateProductsAndCartView(id) {\r\n    const productBtn = this.cache.productBtns.find(btn => btn.dataset.id === id)\r\n    productBtn.style.disabled = true\r\n  }\r\n\r\n  render() {\r\n    return `<div>\r\n      \r\n            </div>\r\n            `\r\n  }\r\n\r\n  getListItem(item) {\r\n    return `<li>${item.title}</li>`\r\n  }\r\n}\r\n\r\nclass StoreController {\r\n  constructor(store) {\r\n    this.store = store\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    // console.log(this.store.allItems) // logs empty array\r\n  }\r\n}\r\n\r\nconst wrapper = document.getElementById('root')\r\nconst pubSub = new PubSub()\r\n// const view = new StoreView(wrapper, pubSub)\r\nconst store = new Store(pubSub)\r\n// const controller = new StoreController(store, view)\r\n"]}